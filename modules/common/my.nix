{
  lib,
  pkgs,
  config,
  ...
}:
with lib; let
  inherit (pkgs.stdenv) isLinux;
in {
  options.my = {
    name = mkOption {
      type = types.str;
      default = "johnson";
      description = "The user name";
    };
    fullName = mkOption {
      type = types.str;
      default = "Johnson Hu";
      description = "The user full name";
    };
    email = mkOption {
      type = types.str;
      default = "johnson.wq.hu@gmail.com";
      description = "The user email";
    };
    home = mkOption {
      type = types.str;
      default = let
        user = config.my.name;
      in
        if isLinux
        then "/home/${user}"
        else "/Users/${user}";
      description = "The user home directory";
    };
    desktop = {
      enable = mkEnableOption "Desktop";
      wayland = {
        enable =
          mkEnableOption "Wayland"
          // {
            default = true;
          };
      };
      xorg = {
        enable = mkEnableOption "Xorg";
      };
      default = mkOption {
        type = types.enum ["i3" "bspwm" "sway" "hyprland"];
        default = "hyprland";
        description = "The default window manager";
      };
    };
    security = {
      enable =
        mkEnableOption "Security"
        // {
          default = true;
        };
    };
    theme = mkOption {
      type = types.nullOr (types.enum ["tokyonight" "catppuccin" "auto"]);
      default = "tokyonight";
      description = "The theme to use";
    };
    shell = mkOption {
      type = types.enum ["bash" "fish" "zsh"];
      default = "fish";
      description = "The shell to use";
    };
    wallpaper = mkOption {
      type = types.str;
      default = "wallpapers/1.jpg";
      description = "The wallpaper of the system";
    };
    initialHashedPassword = mkOption {
      type = types.singleLineStr;
      # generated by `mkpasswd -m scrypt`
      # we have to use initialHashedPassword here when using tmpfs for /
      default = "$y$j9T$UtvejDe22fK.4ok7ZyI1Y/$.vc/kQ3hRFbb2ntOCQQna3CcWWP6dxwtEAE1O9bWcO8";
      description = "The hashed password of the user";
    };
    minimal = mkEnableOption "Minimal";
    # hardware
    machine = {
      type = mkOption {
        type = types.enum ["workstation" "server" "laptop" "desktop" "mobile" "vm" "wsl"];
        default = "laptop";
        description = "The architecture of the system";
      };
      gpu = mkOption {
        type = types.nullOr (
          types.enum [
            "intel"
            "nvidia"
            "amd"
            "hybrid-nv"
          ]
        );
        default = null;
        description = "The GPU of the system";
      };
      cpu = mkOption {
        type = types.nullOr (
          types.enum [
            "intel"
            "amd"
            "vm-intel"
            "vm-amd"
          ]
        );
        default = null;
        description = "The CPU of the system";
      };
      monitors = mkOption {
        type = listOf str;
        default = [];
        description = ''
          this does not affect any drivers and such, it is only necessary for
          declaring things like monitors in window manager configurations
          you can avoid declaring this, but I'd rather if you did declare
        '';
      };
      isHidpi = mkEnableOption "hidpi";
      persist = mkEnableOption "persist"; # must use tmpfs for /
    };
  };
}
