{
  pkgs,
  config,
  lib,
  ...
}: let
  cfg = config.my.desktop;
  inherit (lib) mkIf;
in {
  config = mkIf cfg.enable {
    xdg.portal = {
      enable = true;

      config = {
        common = {
          # Use xdg-desktop-portal-gtk for every portal interface...
          default = [
            "gtk"
          ];
          # except for the secret portal, which is handled by gnome-keyring
          "org.freedesktop.impl.portal.Secret" = [
            "gnome-keyring"
          ];
        };
      };

      # Sets environment variable NIXOS_XDG_OPEN_USE_PORTAL to 1
      # This will make xdg-open use the portal to open programs,
      # which resolves bugs involving programs opening inside FHS envs or with unexpected env vars set from wrappers.
      # xdg-open is used by almost all programs to open a unknown file/uri
      # alacritty as an example, it use xdg-open as default, but you can also custom this behavior
      # and vscode has open like `External Uri Openers`
      xdgOpenUsePortal = false;
      wlr.enable = true;
      extraPortals = with pkgs; [
        xdg-desktop-portal-gtk # for gtk
        xdg-desktop-portal-wlr
      ];
    };

    services = {
      xserver.enable = false; # disable xorg server
      # https://wiki.archlinux.org/title/Greetd
      greetd = {
        enable = true;
        settings = {
          default_session = {
            # Wayland Desktop Manager is installed only for user ryan via home-manager!
            user = config.my.name;
            # .wayland-session is a script generated by home-manager, which links to the current wayland compositor(sway/hyprland or others).
            # with such a vendor-no-locking script, we can switch to another wayland compositor without modifying greetd's config here.
            command = "$HOME/.wayland-session"; # start a wayland session directly without a login manager
            # command = "${pkgs.greetd.tuigreet}/bin/tuigreet --time --cmd $HOME/.wayland-session";  # start wayland session with a TUI login manager
          };
        };
      };
    };

    # fix https://github.com/ryan4yin/nix-config/issues/10
    security.pam.services.swaylock = {};
  };
}
